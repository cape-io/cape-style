import { map, merge } from 'lodash'
import {
  algnCnt, allSides, bgColor, buildNumSizes, disp, floatLeft, floatRight, left50p,
  pos, remStyles, remStyleBuilder, top50p,
} from './utils'

// Combine all the builders to make the bulk of what index.css was. Basically an index of className
// values that will turn into the style.
// styles.pt3 == { paddingTop: '3rem' }
export default {
  ...merge({}, ...map(remStyles, remStyleBuilder)),
  ...remStyleBuilder('margin', 'm', ['margin', '']),
  ...remStyleBuilder('padding', 'p', ['padding', '']),
  ...remStyleBuilder('borderWidth', 'bw', ['border', 'Width']),
  absolute: pos('absolute'),
  b: { fontWeight: 'bold' },
  bn: merge(allSides('border', 'Style', 'none'), allSides('border', 'Width')),
  ba: { borderStyle: 'solid', ...allSides('border', 'Width') },
  bb: { borderBottomStyle: 'solid', borderBottomWidth: '1px' },
  bbn: { borderBottom: 'none' },
  bgGray: bgColor('#eee'),
  bgWashedBlue: bgColor('#f6fffe'),
  bgTrans: { background: 'transparent' },
  bl: { borderLeftStyle: 'solid', borderLeftWidth: '1px' },
  bln: { borderLeft: 'none' },
  block: disp('block'),
  bottom0: { bottom: 0 },
  br: { borderRightStyle: 'solid', borderRightWidth: '1px' },
  brn: { borderRight: 'none' },
  bt: { borderTopStyle: 'solid', borderTopWidth: '1px' },
  btn: { borderTop: 'none' },
  column: floatLeft,
  columnRtl: floatRight,
  contentAround: algnCnt('space-around'),
  contentCenter: algnCnt('center'),
  contentEnd: algnCnt('flex-end'),
  contentBetween: algnCnt('space-between'),
  contentStart: algnCnt('flex-start'),
  contentStretch: algnCnt('stretch'),
  fixed: pos('fixed'),
  fl: floatLeft,
  flex: disp('flex'),
  ...buildNumSizes('flex', 'flex'),
  flexAuto: { flex: '1 1 auto', minWidth: 0, minHeight: 0 },
  flexColumn: { flexDirection: 'column' },
  flexNone: { flex: 'none' },
  flexRow: { flexDirection: 'row' },
  flexWrap: { flexWrap: 'wrap' },
  fr: floatRight,
  h100: { height: '100%' },
  h100vh: { height: '100vh' },
  i: { fontStyle: 'italic' },
  inlineBlock: { display: 'inline-block' },
  itemsBaseline: { alignItems: 'baseline' },
  itemsCenter: { alignItems: 'center' },
  itemsEnd: { alignItems: 'flex-end' },
  itemsStart: { alignItems: 'flex-start' },
  itemsStretch: { alignItems: 'stretch' },
  justifyAround: { justifyContent: 'space-around' },
  justifyBetween: { justifyContent: 'space-between' },
  justifyCenter: { justifyContent: 'center' },
  justifyEnd: { justifyContent: 'flex-end' },
  justifyStart: { justifyContent: 'flex-start' },
  left0: { left: 0 },
  left1: { left: '1rem' },
  left50p,
  left1p5: { left: '1.5rem' },
  lsInline: { display: 'flex', justifyContent: 'center' },
  lsNone: { listStyle: 'none' },
  mlrauto: { marginLeft: 'auto', marginRight: 'auto' },
  mlneg2: { marginLeft: '-2rem' },
  mrneg2: { marginRight: '-2rem' },
  mw100p: { maxWidth: '100%' },
  mw1: { maxWidth: '1rem' },
  mw2: { maxWidth: '2rem' },
  mw3: { maxWidth: '4rem' },
  mw4: { maxWidth: '8rem' },
  mw5: { maxWidth: '16rem' },
  mw6: { maxWidth: '32rem' },
  mw7: { maxWidth: '48rem' },
  mw8: { maxWidth: '64rem' },
  mw9: { maxWidth: '96rem' },
  mwNone: { maxWidth: 'none' },
  ...buildNumSizes('order', 'order'),
  orderLast: { order: 99999 },
  pos,
  positionCenterX: merge({ transform: 'translateX(-50%)' }, left50p),
  positionCenterY: merge({ transform: 'translateY(-50%)' }, top50p),
  positionCenter: merge({ transform: 'translate(-50%,-50%)' }, top50p, left50p),
  relative: pos('relative'),
  right0: { right: 0 },
  static: pos('static'),
  selfBaseline: { alignSelf: 'baseline' },
  selfCenter: { alignSelf: 'center' },
  selfEnd: { alignSelf: 'flex-end' },
  selfStart: { alignSelf: 'flex-start' },
  selfStretch: { alignSelf: 'stretch' },
  textCenter: { textAlign: 'center' },
  textLeft: { textAlign: 'left' },
  textRight: { textAlign: 'right' },
  textReset: {
    textDecoration: 'none',
    textShadow: 'none',
    textTransform: 'none',
    letterSpacing: 'normal',
  },
  textStrike: { textDecoration: 'line-through' },
  textUnderline: { textDecoration: 'underline' },
  textNoUnderline: { textDecoration: 'none' },
  top0: { top: 0 },
  top1: { top: '1rem' },
  top50p,
  w50: { width: '50%' },
  w100vw: { width: '100vw' },
  w100: { width: '100%' },
  ...buildNumSizes('zIndex', 'z'),
}
